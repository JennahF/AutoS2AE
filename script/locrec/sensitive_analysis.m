function sensitive_analysis(dir, alpha, K, reg_i, reg_1)

data = readContent(sprintf('%s/data.txt', dir));
[~, N] = size(data);
item_grid = readContent(sprintf('%s/item_grids_17.txt', dir), 'nrows', N);
sigma = -1/log(1e-3);
item_grid(item_grid>0) = exp(-item_grid(item_grid>0).^2./sigma);
%alpha = 30; K = 50; reg_i = 50000; reg_1 = 10;

[~, ~, metric_train_wals, times_train_wals] = hyperp_search(...
    @(varargin) item_recommend(@iccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'K', K, varargin{:}), ...
    @(metric) metric.recall(1,end), 'train_ratio', (0.2:0.2:1)*0.8);

[~, ~, metric_train_iccf, times_train_iccf] = hyperp_search(...
    @(varargin) item_recommend(@iccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'K', K, 'Y', item_grid, 'reg_i', reg_i, varargin{:}), ...
    @(metric) metric.recall(1,end), 'train_ratio', (0.2:0.2:1)*0.8);

[~, ~, metric_train_piccf, times_train_piccf] = hyperp_search(...
    @(varargin) item_recommend(@piccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'K', K, 'Y', item_grid, 'reg_i', reg_i, varargin{:}), ...
    @(metric) metric.recall(1,end), 'train_ratio', (0.2:0.2:1)*0.8);

[~, ~, metric_train_geomf, times_train_geomf] = hyperp_search(...
    @(varargin) item_recommend(@geomf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'K', K, 'Y', item_grid, 'reg_1', reg_1, varargin{:}), ...
    @(metric) metric.recall(1,end), 'train_ratio', (0.2:0.2:1)*0.8);

% K analysis
[K_wals, ~, metric_K_wals, times_K_wals] = hyperp_search(...
    @(varargin) item_recommend(@iccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, varargin{:}), ...
    @(metric) metric.recall(1,end), 'K', 50:50:300);
[K_iccf, ~, metric_K_iccf, times_K_iccf] = hyperp_search(...
    @(varargin) item_recommend(@iccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'Y', item_grid, 'reg_i', reg_i, varargin{:}), ...
    @(metric) metric.recall(1,end), 'K', 50:50:300);
[K_piccf, ~, metric_K_piccf, times_K_piccf] = hyperp_search(...
    @(varargin) item_recommend(@piccf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'Y', item_grid, 'reg_i', reg_i, varargin{:}), ...
    @(metric) metric.recall(1,end), 'K', 50:50:300);
[K_geomf, ~, metric_K_geomf, times_K_geomf] = hyperp_search(...
    @(varargin) item_recommend(@geomf, +(data>0), 'test_ratio', 0.2, 'alpha', alpha, 'Y', item_grid, 'reg_1', reg_1, varargin{:}), ...
    @(metric) metric.recall(1,end), 'K', 50:50:300);

save(sprintf('%s/sensitive.mat', dir), ...
    'metric_K_wals', 'metric_K_iccf', 'metric_K_piccf', 'metric_K_geomf', ...
    'times_K_wals', 'times_K_iccf', 'times_K_piccf', 'times_K_geomf',...
    'K_wals', 'K_iccf', 'K_piccf','K_geomf',...
    'metric_train_wals', 'metric_train_iccf', 'metric_train_piccf', 'metric_train_geomf',...
    'times_train_wals', 'times_train_iccf', 'times_train_piccf', 'times_train_geomf');
end
